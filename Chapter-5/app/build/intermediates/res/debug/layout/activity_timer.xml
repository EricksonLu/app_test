<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"

    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
<!--
假设minSdkLevel 15，而你使用了api21中的控件比如RippleDrawable
<ripple xmlns:android="http://schemas.android.com/apk/res/android"
  android:color="@color/accent_color" />
则Lint会提示警告。

为了不显示这个警告，可以：

<ripple xmlns:android="http://schemas.android.com/apk/res/android"

  ！！！xmlns:tools="http://schemas.android.com/tools"！！！

  android:color="@color/accent_color"
  tools:targetApi="LOLLIPOP" />


xmlns:android,定义android XML命名空间，并从定义位置开始起作用，映射到项目清单文件不是AndroidManifest.xml这个清单文件
xmlns：tools，定义tools的命名空间

android：layout特性指定了一个组建相对于其他组件的显示方式
tools可以覆盖android的所有标准属性，将android:换成tools:即可。同时在运行的时候就连tools:本身都是被忽略的，不会被带进apk中。

-->

    <TextView
        android:id="@+id/Tv_timer"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_centerVertical="true"
        tools:context=".TimerActivity" />

    <LinearLayout
        android:orientation="horizontal"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_centerHorizontal="true"
        android:id="@+id/linearLayout">

        <Button
            android:layout_width="0dp"
            android:layout_weight="1"
            android:layout_height="wrap_content"
            android:text="@string/start_button"
            android:id="@+id/start_button"
            android:onClick="clickedStart"
             />

        <Button
            android:layout_width="0dp"
            android:layout_weight="1"
            android:layout_height="wrap_content"
            android:text="@string/stop_button"
            android:id="@+id/stop_button"
            android:onClick="clickedStop"
             />
<!--
weight是权重，
match_parent强制性地使构件扩展，以填充布局单元内尽可能多的空间
wrap_content强制性地使视图扩展以显示全部内容-->
        <Button
            android:layout_width="0dp"
            android:layout_weight="1"
            android:layout_height="wrap_content"
            android:text="@string/settings_button"
            android:id="@+id/settings_button"
            android:onClick="clickedSettings"
             />
    </LinearLayout>

    <!--tools：context直接将MainActivity连接到布局文件，并在用户界面中驱动布局的额外特性。
    context属性其实正是的称呼是activity属性，有了这个属性，ide就知道在预览布局的时候该采用什么样的主题。同时他还可以在android studio的java代码中帮助找到相关的文件
    -->



</RelativeLayout><!-- From: file:/F:/app/Chapter-5/app/src/main/res/layout/activity_timer.xml -->